import pyodbc


x = '-85.79659718307502,10.77795485265942,0 -85.69222889773941,10.75598550190328,0 -85.7040919037465,10.64511132921588,0 -85.82664852147853,10.54216848231887,0 -85.83481404638847,10.45508148144614,0 -85.91188311782166,10.36200576376959,0 -85.87090310237848,10.31014914429615,0 -85.88392894994456,10.24962421336151,0 -85.86309918574324,10.16946521221794,0 -85.81099938593498,10.08047091836396,0 -85.76083021971374,9.995938738140802,0 -85.70212089417828,9.943335448911833,0 -85.68734831086749,9.884527052228162,0 -85.63050194829664,9.854545706073413,0 -85.47616148751993,9.825541289196842,0 -85.39381728375835,9.807735850113197,0 -85.31888070629542,9.766485380137727,0 -85.2458177946724,9.698979289776604,0 -85.22134942496221,9.650431713308556,0 -85.17601793907544,9.598738170088426,0 -85.13172269323709,9.508387402316041,0 -85.09077586901842,9.508886128561453,0 -85.05284737717774,9.58580322736805,0 -84.99019526579838,9.67032212545808,0 -84.85779032506129,9.754783751136479,0 -84.6835019933842,9.794366139636008,0 -84.66610425852419,9.75818664319174,0 -84.71444204568105,9.684656439189162,0 -84.6979639734127,9.603507295006644,0 -84.54257870098823,9.483293664955909,0 -84.48067849660674,9.495702507544317,0 -84.21148082715838,9.417830240762431,0 -84.2033695968106,9.373358515323142,0 -84.12974708693264,9.337343389508186,0 -83.98676327519107,9.280965250113304,0 -83.87002471551206,9.19466343325111,0 -83.68847625110357,9.039679530138402,0 -83.66131272186811,8.90064123649563,0 -83.6838327943142,8.724833627790417,0 -83.74431797817155,8.688772097722692,0 -83.77596786633848,8.599683874713815,0 -83.74667379041291,8.556468472492311,0 -83.59986431935924,8.425201769421296,0 -83.54545658492573,8.403827641177333,0 -83.4389023488102,8.393845757028199,0 -83.28394389308096,8.330188600610175,0 -83.24791416926635,8.365672433413042,0 -83.19630440698418,8.34355058833342,0 -83.01086706361527,8.219825398220774,0 -82.94048584919777,8.097380401217988,0 -82.96074169289264,8.043614079159614,0 -82.88219964047305,8.005026224088853,0 -82.8567539607742,8.119249968294861,0 -82.91457165330532,8.283872330044028,0 -82.9767730636507,8.325638423503481,0 -82.97955605022241,8.328029277023434,0 -82.81801868517732,8.425907542949169,0 -82.77616026505386,8.581604786446899,0 -82.79693446511847,8.658047638658044,0 -82.85266527133408,8.747099230866201,0 -82.80757447231613,8.82585558765002,0 -82.66863483743099,8.902803089564857,0 -82.7002497441346,8.999435661054978,0 -82.88881383948022,9.134694573975036,0 -82.88021656408502,9.44203259315076,0 -82.76855310691181,9.493733533227578,0 -82.62624728995277,9.446249055172096,0 -82.51362783058853,9.501167961077535,0 -82.50062175921093,9.570263417439058,0 -82.60418698194326,9.6699467919724,0 -82.73626834500048,9.68567601561073,0 -82.9983624074937,10.01202668585245,0 -83.08254200037923,10.04453652966307,0 -83.41735280132316,10.46633664036048,0 -83.58758152736051,10.92419224560233,0 -83.69452209313307,11.00866900000822,0 -83.76913850493877,10.96447874842788,0 -83.72137792612368,10.83248478277564,0 -83.92045825276364,10.75688758240196,0 -84.01997461234596,10.84347107913119,0 -84.0992223306163,10.81090392071955,0 -84.17959044468671,10.84025637308027,0 -84.20048579454925,10.91953734812696,0 -84.27526339139933,10.94821647468471,0 -84.3517729698229,11.0330912845314,0 -84.54931459337712,11.12017136943573,0 -84.68794490206398,11.13236829021019,0 -84.91598553281845,10.99150876971938,0 -85.34934843015884,11.16451859396308,0 -85.4329762300119,11.16508736785906,0 -85.54163351114235,11.24673854147242,0 -85.64506190571251,11.2709879936917,0 -85.73933257319077,11.09896192332901,0 -85.79550926913382,11.06104891713194,0 -85.79407188408807,10.97848863385871,0 -85.90400308329083,10.96812827309187,0 -85.99002421355911,10.87903333454678,0 -85.79659718307502,10.77795485265942,0'
x = x.split(' ')

## which polygon is represented
poligon_id = 5


elements = []
for i, el in enumerate(x):
    point = el.split(',')
    elements.append([i+1, poligon_id, round(float(point[0]), 5), round(float(point[1]), 5)])
## delete last items, not needed in DB
elements.pop(-1)


# Base de datos
server = '192.168.4.11'
database = 'LightningStrikes'
username = 'lightnings'
password = 'lightnings'
cnxn = pyodbc.connect('DRIVER={SQL Server};SERVER='+server +
                        ';DATABASE='+database+';UID='+username+';PWD=' + password, autocommit=True)
cursor = cnxn.cursor()

sql = "{CALL InsertPolygon (?, ?, ?, ?)}"

for vals in elements:
    values = (vals[0], vals[1], vals[2], vals[3])
    try:
        cursor.execute(sql, values)
    except pyodbc.Error as err:
        print(err)

cnxn.close()